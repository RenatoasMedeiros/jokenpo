services:
  pgsql:
    image: postgres
    container_name: postgres_jokenpo
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - ${DB_PORT}:${DB_PORT}
    volumes:
      # copy the scnema.sql script to entrypoint (any .sql script inside the entrypoint is executred on first run)
      - ./database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
      # copy the sql script to fill tables - when you have it!
      #- ./database/fill_tables.sql:/docker-entrypoint-initdb.d/fill_tables.sql
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${DB_USER}'"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  backend:
    build:
      # this need to be like this, to have access to both backend and database and not only "./backend"
      context: .
      dockerfile: backend/Dockerfile
    image: 2240596.azurecr.io/jokenpo-backend
    env_file:
      - .env
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
    environment:
      DB_HOST: "${DB_HOST}"
      DB_PORT: "${DB_PORT}"
      DB_USER: "${DB_USER}"
      DB_PASSWORD: "${DB_PASSWORD}"
      DB_NAME: "${DB_NAME}"
    depends_on:
      pgsql:
        condition: service_healthy
